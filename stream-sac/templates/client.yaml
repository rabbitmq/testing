#@ load("@ytt:data", "data")
#@ for msg_size in data.values.msg_sizes:
#@ for cluster in data.values.clusters:
#@ cluster_name = cluster.name + "-s" + str(msg_size)
#@ client_name = cluster_name + "-" + data.values.script_name
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: #@ client_name
data:
  script.sh: #@ data.values.script
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: #@ client_name
spec:
  replicas: 1
  selector:
    matchLabels:
      app: #@ client_name
  template:
    metadata:
      labels:
        component: perftest
        app: #@ client_name
      annotations:
        #! prevents pods from getting evicted
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
    spec:
      #! requires for perf-test's --expected-instances flag
      serviceAccountName: jgroups-service-account
      #! deploy to the perftest node pool (smaller VMs)
      nodeSelector:
        rabbitmq: perf-test
      #! do not run on the same node with other perf-test instances nor RabbitMQ nodes
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                    - #@ cluster_name
              topologyKey: kubernetes.io/hostname
            - labelSelector:
                matchExpressions:
                  - key: component
                    operator: In
                    values:
                    - perftest
              topologyKey: kubernetes.io/hostname
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/component
                    operator: In
                    values:
                    - rabbitmq
              topologyKey: kubernetes.io/hostname
      containers:
      - name: client
        image: mkuratczyk/testing-tools:latest
        imagePullPolicy: Always
        command: ["/bin/bash", "-x", "/script/script.sh"]
        volumeMounts:
        - name: script
          mountPath: /script
        resources:
          limits:
            #! no CPU limits - this should be the only pod on the node anyway
            memory: 5Gi
          requests:
            cpu: 6
            memory: 5Gi
        ports:
        - containerPort: 8080
          name: prometheus
        env:
        - name: RABBITMQ_USER
          valueFrom:
            secretKeyRef:
              name: #@ cluster_name + "-default-user"
              key: username
        - name: RABBITMQ_PASS
          valueFrom:
            secretKeyRef:
              name: #@ cluster_name + "-default-user"
              key: password
        - name: RABBITMQ_SERVICE
          value: #@ cluster_name
        - name: ENV_FLAGS
          value: #@ cluster.env_flags
        - name: ENV_COUNT
          #! used to synchronise environments (perf-test --expected-instances)
          value: #@ str(len(data.values.msg_sizes) * len(data.values.clusters))
        - name: MSG_SIZE
          value: #@ str(msg_size)
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
      volumes:
        - name: script
          configMap:
            name: #@ client_name
            items:
              - key: script.sh
                path: script.sh
      #! delete pods quickly
      terminationGracePeriodSeconds: 0
#@ end
#@ end
